---
# Copyright 2017 IBM Corp.
#
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: lxc-update.yml
  hosts: localhost
  gather_facts: yes
  vars:
    os_image_links:
      - name: ubuntu-14.04.5-server-amd64
        images:
          - url: "http://releases.ubuntu.com/14.04.5/ubuntu-14.04.5-server-amd64.iso"
            dest: "{{ project_path_local }}/os_images/ubuntu-14.04.5-server-amd64.iso"
            sha1sum: 5e567024c385cc8f90c83d6763c6e4f1cd5deb6f
      - name: ubuntu-16.04.1-server-amd64
        images:
          - url: "http://old-releases.ubuntu.com/releases/xenial/ubuntu-16.04.1-server-amd64.iso"
            dest: "{{ project_path_local }}/os_images/ubuntu-16.04.1-server-amd64.iso"
            sha1sum: de5ee8665048f009577763efbf4a6f0558833e59
      - name: ubuntu-16.04.2-server-amd64
        images:
          - url: "http://releases.ubuntu.com/16.04/ubuntu-16.04.2-server-amd64.iso"
            dest: "{{ project_path_local }}/os_images/ubuntu-16.04.2-server-amd64.iso"
            sha1sum: f529548fa7468f2d8413b8427d8e383b830df5f6
      - name: ubuntu-14.04.5-server-ppc64el
        images:
          - url: "http://cdimage.ubuntu.com/releases/14.04.5/release/ubuntu-14.04.5-server-ppc64el.iso"
            dest: "{{ project_path_local }}/os_images/ubuntu-14.04.5-server-ppc64el.iso"
            sha1sum: f4843944ca1927375bd3a0dbeb744f5764876dae
          - url: "http://us.ports.ubuntu.com/dists/trusty-updates/main/installer-ppc64el/current/images/xenial-netboot/mini.iso"
            dest: "{{ project_path_local }}/os_images/ubuntu-14.04.5-server-ppc64el.mini.iso"
            sha1sum: b167507d2a65fa81f199cd2125079beb499023c6
      - name: ubuntu-16.04.1-server-ppc64el
        images:
          - url: "http://old-releases.ubuntu.com/releases/xenial/ubuntu-16.04.1-server-ppc64el.iso"
            dest: "{{ project_path_local }}/os_images/ubuntu-16.04.1-server-ppc64el.iso"
            sha1sum: 2dfdca7a2b3407d4ba36df89d063959105dd7b05
          - url: "http://us.ports.ubuntu.com/dists/xenial-updates/main/installer-ppc64el/20101020ubuntu451.6/images/netboot/mini.iso"
            dest: "{{ project_path_local }}/os_images/ubuntu-16.04.1-server-ppc64el.mini.iso"
            sha1sum: 6fe82bae9b8f9a4cde3179ebfb71e964f56c4acb
      - name: ubuntu-16.04.2-server-ppc64el
        images:
          - url: "http://cdimage.ubuntu.com/releases/16.04.2/release/ubuntu-16.04.2-server-ppc64el.iso"
            dest: "{{ project_path_local }}/os_images/ubuntu-16.04.2-server-ppc64el.iso"
            sha1sum: 493f4c8411527409182fe1f3ba1a017c91da3ed2
  tasks:
    - name: "Get list of OS images from config.yml cobbler-profile keys"
      shell: "grep cobbler-profile {{ config_local }} | awk '{print $2}'"
      register: os_image_list

    - name: "Loop through both lists"
      set_fact:
        images: "{{ item[0]['images'] }}"
      with_nested:
        - "{{ os_image_links }}"
        - "{{ os_image_list.stdout_lines }}"
      when: ( item[0]['name'] == (item[1]|splitext)[0] ) or
            ( item[0]['name'] == item[1] )
      register: image_list

    - name: "Compile results into single list with unique entries"
      set_fact:
        image_list_unique:
          "{{ image_list.results | selectattr('ansible_facts', 'defined') | \
           map(attribute='ansible_facts.images') | list | unique }}"

    - name: "Download OS installer images"
      get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        force: no
        checksum: "sha1:{{ item.sha1sum }}"
      with_items: "{{ image_list_unique }}"

- hosts: deployer
  vars:
    scripts_path_local: "{{ hostvars['localhost']['scripts_path_local'] }}"
    images_local: "{{ hostvars['localhost']['project_path_local'] }}/os_images"
    config_local: "{{ hostvars['localhost']['config_local'] }}"
  tasks:
    - name: "Print local scripts/config paths"
      debug:
        msg: "{{ item }}"
      with_items:
        - "Local Scripts Path: {{ scripts_path_local }}"
        - "Local Config file: {{ config_local }}"

#    - name: "RHEL/CentOS: Fix selinuxfs being mounted read-write in the chroot"
#      mount:
#        name: /sys/fs/selinux
#        state: mounted
#        src: selinuxfs
#        fstype: selinuxfs
#        opts: remount,ro
#      when: hostvars['localhost']['ansible_distribution'] in ['RedHat','CentOS']
#      become: yes
#      become_method: sudo

    - name: "Update apt cache and upgrade (safe)"
      apt:
        update_cache: yes
        upgrade: safe
      become: yes
      become_method: sudo

    - name: "Install distro packages"
      apt:
        name: "{{ item }}"
      with_items:
        - python-pip
        - python-dev
        - libffi-dev
        - libssl-dev
        - python-pysnmp4
        - ipmitool
        - git
      become: yes
      become_method: sudo

    - name: "Install python pip packages"
      pip:
        name: "{{ item }}"
      with_items:
        - pip
        - setuptools
        - wheel
        - virtualenv
      become: yes
      become_method: sudo

    - name: "Create project root directory"
      file:
        path: "{{ project_path }}"
        state: directory

    - name: "Create python virtual environment"
      command: virtualenv --no-wheel --system-site-packages {{ venv_path }}

    - name: "Activate python venv and install pip packages"
      command: >
        /bin/bash -c "
        source {{ venv_path }}/bin/activate &&
        pip install --ignore-installed
        'pyasn1==0.2.3'
        'pysnmp==4.3.4'
        'pyaml==16.12.2'
        'orderedattrdict==1.4.3'
        'pyghmi==1.0.18'
        'paramiko==2.1.2'
        'tabulate==0.7.7' &&
        deactivate"

    - name: "Copy config file into deployment container"
      copy:
        src: "{{ config_local }}"
        dest: "{{ inventory }}"

    - name: "Add default Ansible user to inventory.yml"
      lineinfile:
        line: "ansible_user: root"
        dest: "{{ inventory }}"
        state: present
        insertafter: '^password-default*'

    - name: "Add SSH private key location to inventory.yml"
      lineinfile:
        line: "ansible_ssh_private_key_file: \
               {{ hostvars['localhost']['ssh_key_private'] }}"
        dest: "{{ inventory }}"
        state: present
        insertafter: '^ansible_user:*'

    - name: "Copy scripts into deployment container"
      copy:
        src: "{{ scripts_path_local }}"
        dest: "{{ project_path }}"

    - name: "Copy OS images and configs into deployment container"
      copy:
        src: "{{ images_local }}"
        dest: "{{ project_path }}"

    - name: "Create log file"
      file:
        path: "{{ project_path }}/log.txt"
        state: touch
        mode: 0644
